name: collect result
on:
  workflow_call:
    inputs: 
      repo:
        type: string
        required: false
      issue_id:
        type: string
        required: false
      
      kunit-test_result:
        type: string
        required: true
      kernel-build_result:
        type: string
        required: true
      lava-trigger_result:
        type: string
        required: true
      check-patch_result:
        type: string
        required: true
      kunit-test_info:
        type: string
        required: false
      kernel-build_info:
        type: string
        required: false
      lava-trigger_info:
        type: string
        required: false
      check-patch_info:
        type: string
        required: false

jobs:
  collect-result:
    # services:
    #   nginx:
    #     image: nginx
    #     ports:
    #       - 8080:80
  
    runs-on: 'ubuntu-latest'
    env:
      LAVA_TRIGGER_INFO: ${{ inputs.lava-trigger_info }}
      CHECK_PATCH_INFO: ${{ inputs.check-patch_info }}
      KUNIT_TEST_INFO: ${{ inputs.kunit-test_info }}
      KERNEL_BUILD_INFO: ${{ inputs.kernel-build_info }}
      ISSUE_ID: ${{ inputs.issue_id }}
      REPO: ${{ inputs.repo }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: show result
        run: |
          log_dir="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          cat > summary << EEE
          # RVCK result

          > log: [$log_dir]($log_dir)

          | check | result |
          | :-: | :-: |
          |kunit-test| ${{ inputs.kunit-test_result }} |
          |kernel-build| ${{ inputs.kernel-build_result }} |
          |lava-trigger| ${{ inputs.lava-trigger_result }} |
          |check-patch| ${{ inputs.check-patch_result }} |
          
          $KUNIT_TEST_INFO
          
          $CHECK_PATCH_INFO
          
          $KERNEL_BUILD_INFO
          
          $LAVA_TRIGGER_INFO
          EEE
          cat summary > $GITHUB_STEP_SUMMARY
          
          gh issue comment "$ISSUE_ID" -b "$(cat summary)" -R "$REPO"

  set-labels:
    runs-on: 'ubuntu-latest'
    env:
      LAVA_LABELS: "lava_waiting,lava_checking,lava_check_done,lava_check_fail"
      CHECK_PATCH_LABELS: "check-patch_waiting,check-patch_checking,check-patch_done"
      KERNEL_LABELS: "kernel_waiting,kernel_building,kernel_build_failed,kernel_build_succeed"
      KUNIT_TEST_LABELS: "kunit-test_waiting,kunit-test_checking,kunit-test_done"
    steps:
      - name: clear labels
        run: gh issue edit "$ISSUE_ID" --remove-label "$LAVA_LABELS,$CHECK_PATCH_LABELS,$KERNEL_LABELS,$KUNIT_TEST_LABELS" -R "$REPO"
      - name: set labels
        shell: bash
        run: |
          declare -A labels=(
            [kunit-test_success]="kunit-test_done"
            [kernel-build_success]="kernel_build_succeed"
            [kernel-build_failure]="kernel_build_failed"
            [lava-trigger_success]="lava_check_done"
            [lava-trigger_failure]="lava_check_fail"
            [check-patch_success]="check-patch_done"
            [check-patch_failure]="check-patch_done"
          )
          results=(
            "kunit-test_${{ inputs.kunit-test_result }}"
            "kernel-build_${{ inputs.kernel-build_result }}"
            "lava-trigger_${{ inputs.lava-trigger_result }}"
            "check-patch_${{ inputs.check-patch_result }}"
          )
          add_labels=()
          for result in "${results[@]}"; do
            if [[ "${labels[$result]}" != "" ]]; then
              add_labels+=("${labels[$result]}")
            fi
          done
          gh issue edit "$ISSUE_ID" --add-label "$(echo "${add_labels[@]}" | tr ' ' ',')" -R "$REPO"
          
          
