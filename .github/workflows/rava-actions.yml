name: RAVA actions

on:
  workflow_call:
    secrets:
      lava_token:
        required: true

jobs:
  parse-request:
    runs-on: 'ubuntu-latest'
    outputs:
      lava_template: ${{ steps.parse.outputs.lava_template }}
      lava_testcase_url: ${{ steps.parse.outputs.lava_testcase_url }}
      qemu_job_name: ${{ steps.parse.outputs.qemu_job_name }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_REPO: ${{ github.repository }}
      event_name: ${{ github.event_name }}
    steps:
      - id: parse
        run: |
          if [ "$event_name" = 'pull_request' ] || [ "$event_name" = 'pull_request_target' ]; then
            title="$(gh pr view ${{ github.event.pull_request.number }} --json title -q '.title')"
            # title=[lava-job-template/qemu/qemu.yaml]-[lava-testcases/common-test/ltp/ltp.yaml]: xxx
            lava_template=$(echo "$title" | awk -F'\\]-\\[' '{print $1}')
            lava_template="${lava_template#\[}"
            lava_template="${lava_template%\]*}"
            [ -z "$lava_template" ] && exit 0

            lava_testcase_url=$(echo "$title" | awk -F'\\]-\\[' '{print $2}')
            lava_testcase_url="${lava_testcase_url#\[}"
            lava_testcase_url="${lava_testcase_url%\]*}"
            [ -z "$lava_testcase_url" ] && exit 0

          elif [ "$event_name" = 'issues' ]; then
            true
          elif [ "$event_name" = 'issue_comment' ]; then
            comment_body="${{ github.event.comment.body }}"
            if [ "$(echo "$comment_body" | awk -F'-' '{print $1}')" != '/check' ]; then
              echo "This is not a check command, exiting."
              exit 0
            fi
            lava_template=$(echo "$comment_body" | awk -F'lava_template=' '{print $2}' | awk '{print $1}')
            lava_testcase_url=$(echo "$comment_body" | awk -F'testcase_url=' '{print $2}' | awk '{print $1}')
          
          fi
          qemu_job_name="$(t="${lava_template##*/}"; echo "${t%.*}")_$(t="${lava_testcase_url##*/}"; echo "${t%.*}")"

          echo "lava_template=$lava_template" >> $GITHUB_OUTPUT
          echo "lava_testcase_url=$lava_testcase_url" >> $GITHUB_OUTPUT
          echo "qemu_job_name=$qemu_job_name" >> $GITHUB_OUTPUT
          cat > $GITHUB_STEP_SUMMARY << EOF
          ## LAVA Check Request
          
          - **qemu job name**: $qemu_job_name
          - **LAVA Template**: $lava_template
          - **Testcase URL**: $lava_testcase_url

          EOF

  
  run-lava-check:
    needs: [parse-request]
    if: ${{ needs.parse-request.outputs.lava_template && needs.parse-request.outputs.lava_testcase_url }}
    uses: ./.github/workflows/lava-trigger.yml
    secrets:
      lava_token: ${{ secrets.lava_token }}
    with:
      kernel_download_url: 'https://fast-mirror.isrc.ac.cn/openeuler-sig-riscv/openEuler-RISC-V/RVCK/OERV-RVCI_rvck-olk_1/Image'
      qemu_job_name: ${{ needs.parse-request.outputs.qemu_job_name }}
      testcase_repo: ${{ github.repository }}
      testcase_ref: ${{ github.event.pull_request.head.ref || 'main' }}
      lava_template: ${{ needs.parse-request.outputs.lava_template }}
      testcase_url: ${{ needs.parse-request.outputs.lava_testcase_url }}
      